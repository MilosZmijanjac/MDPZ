package org.unibl.etf.mdp.rmi.server;

import java.io.File;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

public class AZSServer implements AZSInterface{

	//Izmjeniti ovaj dio kasnije da uzima iz config file-a
	public static final String PATH = "resources";
	
	public AZSServer() throws RemoteException{
		super();
	}
	
	public static void main(String[] args) {
		//postavljanje property file-a
		System.setProperty("java.security.policy", PATH + File.separator + "server_policyfile.txt");
		
		//postavljanje novog SecurityManager-a ako on ne postoji
		if (System.getSecurityManager() == null) {
			System.setSecurityManager(new SecurityManager());
		}
		
		try{
		//kreiranje serverskog objekta
		AZSServer server= new AZSServer();
		//generisanje stub-a
		AZSInterface stub = (AZSInterface)UnicastRemoteObject.exportObject(server,0);
		//kreiranje Registry-a
		Registry registry=LocateRegistry.createRegistry(1099);
		//registrovanje Registry-a
		registry.rebind("AZS", stub);
		
		System.out.println("Server started...");
		
		}catch (Exception ex) {
			ex.printStackTrace();
		}

	}


	public void upload(byte[] fileStream, String filename, String user,
			String station) throws RemoteException {
		
		System.out.print("upload");
		
	}

	public byte[] download(String name) throws RemoteException {
		System.out.println("download");
		return null;
	}

}
